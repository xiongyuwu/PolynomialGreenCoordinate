cmake_minimum_required(VERSION 3.7)
project(PolynomialGreenCoordinate)

set(CMAKE_CONFIGURATION_TYPES "Debug;Release")

add_compile_definitions(_USE_MATH_DEFINES)

if(MSVC)
    add_compile_options(/bigobj)
endif()

find_package(OpenGL REQUIRED)
include_directories(${OPENGL_INCLUDE_DIR})

set(EIGEN_INCLUDE_DIR "D:/ProgramFiles/eigen-3.3.8")
set(OPENMESH_INCLUDE_DIR "D:/ProgramFiles/OpenMesh 10.0 static/include")
set(OPENMESH_LIB_DIR "D:/ProgramFiles/OpenMesh 10.0 static/lib")

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

set(CMAKE_PREFIX_PATH "D:/ProgramFiles/Qt/5.14.2/5.14.2/msvc2017_64")
find_package(Qt5 COMPONENTS Widgets Core Gui OpenGL REQUIRED)

get_target_property(QMAKE_EXEC Qt5::qmake IMPORTED_LOCATION)
get_filename_component(QT_BIN_DIR "${QMAKE_EXEC}" DIRECTORY)
find_program(DEPLOYQT_EXECUTABLE 
    NAMES windeployqt macdeployqt 
    HINTS "${QT_BIN_DIR}"
    REQUIRED
)

set(BOOST_ROOT "D:/ProgramFiles/boost_1_86_0")
find_package(Boost REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})

set(QRC_SOURCE_FILES src/surfacemeshprocessing.qrc)
qt5_add_resources(QRC_FILES ${QRC_SOURCE_FILES})

include_directories(
    ${EIGEN_INCLUDE_DIR}
    ${OPENMESH_INCLUDE_DIR}
)

link_directories(${OPENMESH_LIB_DIR})

file(GLOB ANN_FILES src/ANN/*)
file(GLOB GUI_FILES
    src/MeshViewer/Aux_Transform_Mesh_Dialog.h
    src/main.cpp
    src/MeshViewer/MainViewerWidget.*
    src/MeshViewer/MeshParamDialog.*
    src/surfacemeshprocessing.*
)
file(GLOB MESHVIEWER_FILES
    src/MeshViewer/Auxiliary_Function_Mesh.cpp
    src/MeshViewer/BezierSurface.*
    src/MeshViewer/InteractiveViewerWidget.*
    src/MeshViewer/MeshDefinition.*
    src/MeshViewer/MeshViewerWidget.*
    src/MeshViewer/PGC.*
    src/MeshViewer/OpenglHeaders.h
    src/MeshViewer/QGLViewerWidget.*
)

add_executable(${PROJECT_NAME}
    ${ANN_FILES}
    ${GUI_FILES}
    ${MESHVIEWER_FILES}
    ${QRC_FILES}
)

option(DEBUG_MODE "Enable detailed debug output" OFF)
target_compile_definitions(${PROJECT_NAME} PRIVATE 
    DEBUG_MODE=$<IF:$<BOOL:${DEBUG_MODE}>,1,0>
)
message(STATUS "Debug mode: ${DEBUG_MODE}")

if(WIN32)
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${DEPLOYQT_EXECUTABLE} 
            "$<TARGET_FILE:${PROJECT_NAME}>"
            --$<LOWER_CASE:$<CONFIG>>
            --no-compiler-runtime
            --no-system-d3d-compiler
        COMMENT "Deploying Qt dependencies..."
    )
endif()

source_group(ANN FILES ${ANN_FILES})
source_group(GUI FILES ${GUI_FILES})
source_group("Mesh Viewer" FILES ${MESHVIEWER_FILES})

target_link_libraries(${PROJECT_NAME}
    Qt5::Widgets 
    Qt5::Core 
    Qt5::Gui 
    Qt5::OpenGL
    ${OPENGL_LIBRARIES}
    ${GLUT_LIBRARY}
    OpenMeshCore
    OpenMeshTools
)

if(WIN32)
    target_link_libraries(${PROJECT_NAME} opengl32 glu32)
elseif(APPLE)
    find_library(COCOA_LIBRARY Cocoa)
    target_link_libraries(${PROJECT_NAME} ${COCOA_LIBRARY})
endif()
